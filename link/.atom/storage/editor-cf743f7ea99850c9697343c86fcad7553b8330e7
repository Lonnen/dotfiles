{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":958,"height":1178,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/lonnen/repos/firehug"],"buffers":[{"text":"{\n  \"name\": \"firehug\",\n  \"version\": \"1.0.1\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/fuzzyfox/firehug.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/fuzzyfox/firehug/issues\"\n  },\n  \"private\": true,\n  \"license\": \"MPL-2.0\",\n  \"scripts\": {\n    \"start\": \"node server.js\",\n    \"test\": \"grunt test\",\n    \"postinstall\": \"./node_modules/grunt-cli/bin/grunt build\"\n  },\n  \"keywords\": [\n    \"mozilla\",\n    \"schedule\",\n    \"festival\",\n    \"event\"\n  ],\n  \"dependencies\": {\n    \"debug\": \"^2.1.1\",\n    \"express\": \"^4.8.7\",\n    \"google-spreadsheet\": \"^0.2.8\",\n    \"helmet\": \"^0.4.1\",\n    \"later\": \"^1.1.6\",\n    \"lodash\": \"^2.4.1\",\n    \"marked\": \"^0.3.2\",\n    \"moment\": \"^2.8.2\",\n    \"moment-timezone\": \"^0.2.2\",\n    \"morgan\": \"^1.3.0\",\n    \"nconf\": \"^0.6.9\",\n    \"nunjucks\": \"^1.0.7\",\n    \"redis\": \"^0.12.1\",\n    \"request\": \"^2.40.0\",\n    \"shortid\": \"^2.0.1\",\n    \"grunt\": \"^0.4.5\",\n    \"grunt-cli\": \"0.1.13\",\n    \"grunt-bump\": \"0.0.15\",\n    \"grunt-contrib-jshint\": \"^0.10.0\",\n    \"grunt-express-server\": \"^0.4.19\",\n    \"grunt-nunjucks\": \"^0.1.4\",\n    \"grunt-contrib-less\": \"^0.11.4\",\n    \"grunt-contrib-uglify\": \"^0.5.1\"\n  },\n  \"engines\": {\n    \"node\": \"0.10\"\n  }\n}\n","markers":{"markers":{"1":{"id":1,"range":[[50,3],[50,3]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":176,"goalBufferRange":null,"autoscroll":true},"deserializer":"Marker"},"159":{"id":159,"range":[[40,17],[40,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"173":{"id":173,"range":[[50,2],[50,3]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"174":{"id":174,"range":[[48,13],[48,14]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[15,20],[15,37]],"newRange":[[15,20],[15,20]],"oldText":"bower install && ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[15,20],[15,20]],"newRange":[[15,20],[15,21]],"oldText":"","newText":".","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[15,21],[15,21]],"newRange":[[15,21],[15,22]],"oldText":"","newText":"/","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[15,22],[15,22]],"newRange":[[15,22],[15,23]],"oldText":"","newText":"m","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[15,23],[15,23]],"newRange":[[15,23],[15,24]],"oldText":"","newText":"o","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[15,24],[15,24]]},"newParams":{"range":[[15,23],[15,24]]},"deserializer":"MarkerPatch"},{"oldRange":[[15,23],[15,24]],"newRange":[[15,23],[15,23]],"oldText":"o","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[15,23],[15,23]]},"newParams":{"range":[[15,22],[15,23]]},"deserializer":"MarkerPatch"},{"oldRange":[[15,22],[15,23]],"newRange":[[15,22],[15,22]],"oldText":"m","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[15,22],[15,22]]},"newParams":{"range":[[15,21],[15,22]]},"deserializer":"MarkerPatch"},{"oldRange":[[15,21],[15,22]],"newRange":[[15,21],[15,21]],"oldText":"/","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[15,21],[15,21]]},"newParams":{"range":[[15,20],[15,21]]},"deserializer":"MarkerPatch"},{"oldRange":[[15,20],[15,21]],"newRange":[[15,20],[15,20]],"oldText":".","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[15,20],[15,20]],"newRange":[[15,20],[15,35]],"oldText":"","newText":"./node_modules/","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[15,40],[15,40]],"newRange":[[15,40],[15,41]],"oldText":"","newText":"/","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[15,41],[15,41]],"newRange":[[15,41],[15,42]],"oldText":"","newText":"b","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[15,42],[15,42]],"newRange":[[15,42],[15,43]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[15,43],[15,43]],"newRange":[[15,43],[15,44]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[15,44],[15,44]],"newRange":[[15,44],[15,45]],"oldText":"","newText":"/","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[15,45],[15,45]],"newRange":[[15,45],[15,46]],"oldText":"","newText":"g","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[15,46],[15,46]],"newRange":[[15,46],[15,47]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[15,47],[15,47]],"newRange":[[15,47],[15,48]],"oldText":"","newText":"u","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[15,48],[15,48]],"newRange":[[15,48],[15,49]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[15,49],[15,49]],"newRange":[[15,49],[15,50]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[41,0],[48,36]],"newRange":[[41,0],[41,0]],"oldText":"    \"grunt\": \"^0.4.5\",\n    \"grunt-bump\": \"0.0.15\",\n    \"grunt-contrib-jshint\": \"^0.10.0\",\n    \"grunt-contrib-watch\": \"^0.6.1\",\n    \"grunt-express-server\": \"^0.4.19\",\n    \"grunt-nunjucks\": \"^0.1.4\",\n    \"grunt-contrib-less\": \"^0.11.4\",\n    \"grunt-contrib-uglify\": \"^0.5.1\"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[38,23],[38,23]],"newRange":[[38,23],[38,24]],"oldText":"","newText":",","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[38,24],[38,24]],"newRange":[[38,24],[39,0]],"oldText":"","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[39,4]],"oldText":"","newText":"    ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[39,4],[39,4]],"newRange":[[39,4],[46,40]],"oldText":"","newText":"    \"grunt\": \"^0.4.5\",\n        \"grunt-bump\": \"0.0.15\",\n        \"grunt-contrib-jshint\": \"^0.10.0\",\n        \"grunt-contrib-watch\": \"^0.6.1\",\n        \"grunt-express-server\": \"^0.4.19\",\n        \"grunt-nunjucks\": \"^0.1.4\",\n        \"grunt-contrib-less\": \"^0.11.4\",\n        \"grunt-contrib-uglify\": \"^0.5.1\"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[39,0],[39,8]],"newRange":[[39,0],[39,4]],"oldText":"        ","newText":"    ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,0],[40,8]],"newRange":[[40,0],[40,4]],"oldText":"        ","newText":"    ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[41,0],[41,8]],"newRange":[[41,0],[41,4]],"oldText":"        ","newText":"    ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[42,0],[42,8]],"newRange":[[42,0],[42,4]],"oldText":"        ","newText":"    ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[43,0],[43,8]],"newRange":[[43,0],[43,4]],"oldText":"        ","newText":"    ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[44,0],[44,8]],"newRange":[[44,0],[44,4]],"oldText":"        ","newText":"    ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[45,0],[45,8]],"newRange":[[45,0],[45,4]],"oldText":"        ","newText":"    ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[46,0],[46,8]],"newRange":[[46,0],[46,4]],"oldText":"        ","newText":"    ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[48,0],[51,0]],"newRange":[[48,0],[48,0]],"oldText":"  \"devDependencies\": {\n\n  },\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[42,0],[43,0]],"newRange":[[42,0],[42,0]],"oldText":"    \"grunt-contrib-watch\": \"^0.6.1\",\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[15,20],[15,50]]},"newParams":{"tailed":false,"range":[[15,50],[15,50]]},"deserializer":"MarkerPatch"},{"oldRange":[[15,20],[15,50]],"newRange":[[15,20],[15,54]],"oldText":"./node_modules/grunt/bin/grunt","newText":"./node_modules/grunt-cli/bin/grunt","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[39,22],[39,22]],"newRange":[[39,22],[40,0]],"oldText":"","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,0],[40,0]],"newRange":[[40,0],[40,4]],"oldText":"","newText":"    ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[40,4],[40,4]],"newRange":[[40,4],[40,6]],"oldText":"","newText":"\"\"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"range":[[40,6],[40,6]]},"newParams":{"range":[[40,5],[40,5]]},"deserializer":"MarkerPatch"},{"oldRange":[[40,5],[40,5]],"newRange":[[40,5],[40,6]],"oldText":"","newText":"g","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,6],[40,6]],"newRange":[[40,6],[40,7]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,7],[40,7]],"newRange":[[40,7],[40,8]],"oldText":"","newText":"u","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,8],[40,8]],"newRange":[[40,8],[40,9]],"oldText":"","newText":"n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,9],[40,9]],"newRange":[[40,9],[40,10]],"oldText":"","newText":"t","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[40,10],[40,10]],"newRange":[[40,10],[40,11]],"oldText":"","newText":"-","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[40,11],[40,11]],"newRange":[[40,11],[40,12]],"oldText":"","newText":"c","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,12],[40,12]],"newRange":[[40,12],[40,13]],"oldText":"","newText":"l","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,13],[40,13]],"newRange":[[40,13],[40,14]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[40,15],[40,15]],"newRange":[[40,15],[40,16]],"oldText":"","newText":"L","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[40,16],[40,16]],"newRange":[[40,16],[40,17]],"oldText":"","newText":"+","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[40,17],[40,17]]},"newParams":{"reversed":true,"range":[[40,16],[40,17]]},"deserializer":"MarkerPatch"},{"oldRange":[[40,16],[40,17]],"newRange":[[40,16],[40,16]],"oldText":"+","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[40,16],[40,16]]},"newParams":{"range":[[40,15],[40,16]]},"deserializer":"MarkerPatch"},{"oldRange":[[40,15],[40,16]],"newRange":[[40,15],[40,15]],"oldText":"L","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[40,15],[40,15]]},"newParams":{"range":[[40,14],[40,15]]},"deserializer":"MarkerPatch"},{"oldRange":[[40,14],[40,15]],"newRange":[[40,14],[40,14]],"oldText":"\"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"oldRange":[[40,14],[40,14]],"newRange":[[40,14],[40,15]],"oldText":"","newText":":","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,15],[40,15]],"newRange":[[40,15],[40,16]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[40,16],[40,16]]},"newParams":{"range":[[40,15],[40,16]]},"deserializer":"MarkerPatch"},{"oldRange":[[40,15],[40,16]],"newRange":[[40,15],[40,15]],"oldText":" ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[40,15],[40,15]]},"newParams":{"range":[[40,14],[40,15]]},"deserializer":"MarkerPatch"},{"oldRange":[[40,14],[40,15]],"newRange":[[40,14],[40,14]],"oldText":":","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"oldRange":[[40,14],[40,14]],"newRange":[[40,14],[40,15]],"oldText":"","newText":"\"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[40,15],[40,15]],"newRange":[[40,15],[40,16]],"oldText":"","newText":":","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[40,16],[40,16]],"newRange":[[40,16],[40,17]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[40,17],[40,17]],"newRange":[[40,17],[40,19]],"oldText":"","newText":"\"\"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"range":[[40,19],[40,19]]},"newParams":{"range":[[40,18],[40,18]]},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[40,18],[40,18]],"newRange":[[40,18],[40,23]],"oldText":"","newText":".1.13","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[40,18],[40,18]],"newRange":[[40,18],[40,19]],"oldText":"","newText":"0","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[40,25],[40,25]],"newRange":[[40,25],[40,26]],"oldText":"","newText":",","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/lonnen/repos/firehug/package.json","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"903f57fb9714ae6ba2af80a64ec1cbf60a181bfd","deserializer":"TextBuffer"},{"text":"/**\n * remoteConfig.js\n *\n * Gets config items from the Redis database, that have been stored\n * there from the Google Spreadsheet sessions are pulled from.\n *\n * *Taken from ThunderHug {@link https://github.com/mozilla/thunderhug/blob/2fdd08f23cb/lib/remoteConfig.js}\n */\n\n'use strict';\n\nvar later = require( 'later' );\nvar shared = require( '../shared' );\nvar redisClient = shared.redisClient;\nvar env = shared.env;\nvar debug = shared.debug( 'remoteConfig' );\n\n// remote config sheet (from redis db)\nvar redisPrefix = env.get( 'REDIS_PREFIX' ) || 'firehug';\nredisPrefix = redisPrefix + ':sheets';\n\nvar redisKey = redisPrefix + ':meta';\n\n// local copy (restructured for easier lookup)\nvar localStore = {};\n\n/**\n * Determine of object is empty\n *\n * hat tip {@link http://stackoverflow.com/questions/4994201/is-object-empty}\n * @param  {Object}  obj Object to check\n * @return {Boolean}     True if empty\n */\nfunction isEmpty( obj ) {\n  // null and undefined are \"empty\"\n  if( obj === null || typeof obj === 'undefined' ) {\n    return true;\n  }\n\n  // Assume if it has a length property with a non-zero value\n  // that that property is correct.\n  if( obj.length && obj.length > 0 ) {\n    return false;\n  }\n  if( obj.length === 0 ) {\n    return true;\n  }\n\n  // Otherwise, does it have any properties of its own?\n  // Note that this doesn't handle\n  // toString and toValue enumeration bugs in IE < 9\n  for( var key in obj ) {\n    if ( hasOwnProperty.call( obj, key ) ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Fetch remote config on regular interval (defaults to 5mins)\n *\n * @param  {Integer} noConfigCalls Number of successive calls w/o config returned\n */\n(function fetchRemoteConfig( noConfigCalls ) {\n  if( noConfigCalls && noConfigCalls > 9 ) {\n    throw new Error( 'Unable to load remote config' );\n  }\n\n  redisClient.get( redisKey, function( err, config ) {\n    if( err ) {\n      return console.error( err );\n    }\n\n    if( config !== null ) {\n      debug( 'Updated config from remote.' );\n      config = JSON.parse( config );\n\n      config.data.forEach( function( configItem ) {\n        if( localStore[ configItem.key ] === undefined ) {\n          localStore[ configItem.key ] = {};\n        }\n        localStore[ configItem.key ][ configItem.type ] = configItem.value;\n      });\n\n      return;\n    }\n\n    // if we have no config try again in half a second\n    // up to 10 times before failing + thowing error\n    setTimeout( function(){\n      if( noConfigCalls !== undefined ) {\n        return fetchRemoteConfig( noConfigCalls + 1 );\n      }\n\n      fetchRemoteConfig( 0 );\n    }, 100 );\n  });\n\n  // run this on the same schedule as other jobs\n  var schedule = later.parse.cron( env.get( 'JOB_SCHEDULE' ) );\n  later.setTimeout( fetchRemoteConfig, schedule );\n}());\n\n/**\n * Get a composite-key's value\n *\n * @param  {String} key The composite-key to search for in format `\"key:type\"`\n * @return {String}     Value of the key or undefined\n */\nfunction get( compositeKey ) {\n  var keyFragments = compositeKey.split( ':' );\n  var key = keyFragments[ 0 ];\n  var type = keyFragments[ 1 ];\n\n  // check key exists first\n  if( !localStore[ key ] ) {\n    return debug( 'key \"%s\" not found in remote config', compositeKey );\n  }\n\n  return localStore[ key ][ type ];\n}\n\n/**\n * Gets all items associated w/ a key\n *\n * @param  {String} key The key to get\n * @return {Object}     The object assocaited w/ that key\n */\nfunction getKey( key ) {\n  if( localStore[ key ] !== undefined ) {\n    return JSON.parse( JSON.stringify( localStore[ key ] ) );\n  }\n\n  return debug( 'key \"%s\" not found in remote config', key );\n}\n\n/**\n * Return all keys by type and their values\n *\n * @param  {String} type The type to get key:value by\n * @return {Object}      Object of key:value's else undefined\n */\nfunction getType( type ) {\n  var rtn = {};\n\n  for( var keyName in localStore ) {\n    var key = localStore[ keyName ];\n\n    if( key[ type ] ) {\n      rtn[ keyName ] = key[ type ];\n    }\n  }\n\n  if( isEmpty( rtn ) ) {\n    return debug( 'type \"%s\" not found in remote config', type );\n  }\n\n  return rtn;\n}\n\n/**\n * Perform a reverse lookup for a values key.\n *\n * Note: returns the first match only.\n *\n * @param  {String} value The value to look for\n * @return {Object}       An object containing the key + type. Empty objecy on fail.\n */\nfunction reverseLookup( value ) {\n  // loop through all keys\n  for( var keyName in localStore ) {\n    var key = localStore[ keyName ];\n\n    // loop through all types\n    for( var type in key ) {\n\n      // check if we found it\n      if( key[ type ] === value ) {\n        // create object for successful find\n        return {\n          key: keyName,\n          type: type\n        };\n      }\n    }\n  }\n  debug( 'value \"%s\" not found in remote config', value );\n  return {};\n}\n\nmodule.exports = {\n  get: get,\n  getKey: getKey,\n  getType: getType,\n  reverseLookup: reverseLookup\n};\n","markers":{"markers":{"1":{"id":1,"range":[[68,3],[68,3]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":184,"goalBufferRange":null,"autoscroll":true},"deserializer":"Marker"},"12":{"id":12,"range":[[68,2],[68,3]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"13":{"id":13,"range":[[66,43],[66,44]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/lonnen/repos/firehug/lib/remoteConfig.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"7dedec3913b334c3bd0365b931ca20af589aa8a7","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":176,"softTabs":true,"displayBuffer":{"id":177,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lonnen/repos/firehug/package.json","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":184,"softTabs":true,"displayBuffer":{"id":185,"softWrapped":true,"editorWidthInChars":null,"scrollTop":1050,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lonnen/repos/firehug/lib/remoteConfig.js","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/lonnen/repos/firehug/package.json","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-json","language-javascript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"command-logger":{"eventLog":{"tree-view:duplicate":{"count":1,"name":"tree-view:duplicate","lastRun":1425181612486},"core:move-right":{"count":68,"name":"core:move-right","lastRun":1425278313860},"core:backspace":{"count":116,"name":"core:backspace","lastRun":1425279131203},"core:confirm":{"count":40,"name":"core:confirm","lastRun":1425278768781},"editor:display-updated":{"count":1568,"name":"editor:display-updated","lastRun":1425538476687},"pane:item-added":{"count":26,"name":"pane:item-added","lastRun":1425279679382},"pane-container:active-pane-item-changed":{"count":52,"name":"pane-container:active-pane-item-changed","lastRun":1425485797475},"editor:attached":{"count":25,"name":"editor:attached","lastRun":1425279679434},"pane:active-item-changed":{"count":47,"name":"pane:active-item-changed","lastRun":1425485797522},"cursor:moved":{"count":807,"name":"cursor:moved","lastRun":1425538476686},"selection:changed":{"count":826,"name":"selection:changed","lastRun":1425538476687},"pane:active-item-modified-status-changed":{"count":52,"name":"pane:active-item-modified-status-changed","lastRun":1425279136120},"core:move-down":{"count":228,"name":"core:move-down","lastRun":1425278758178},"core:move-to-top":{"count":2,"name":"core:move-to-top","lastRun":1425181667990},"core:paste":{"count":34,"name":"core:paste","lastRun":1425279132659},"editor:newline":{"count":20,"name":"editor:newline","lastRun":1425279125582},"core:close":{"count":40,"name":"core:close","lastRun":1425278734873},"pane:before-item-destroyed":{"count":23,"name":"pane:before-item-destroyed","lastRun":1425278734835},"editor:detached":{"count":42,"name":"editor:detached","lastRun":1425278734867},"editor:will-be-removed":{"count":42,"name":"editor:will-be-removed","lastRun":1425278734867},"pane:item-removed":{"count":23,"name":"pane:item-removed","lastRun":1425278734870},"core:save":{"count":40,"name":"core:save","lastRun":1425279136123},"core:move-up":{"count":258,"name":"core:move-up","lastRun":1425278756898},"core:move-left":{"count":58,"name":"core:move-left","lastRun":1425279134537},"settings-view:check-for-package-updates":{"count":1,"name":"settings-view:check-for-package-updates","lastRun":1425182425301},"project-find:show":{"count":4,"name":"project-find:show","lastRun":1425182640481},"pane:reopen-closed-item":{"count":8,"name":"pane:reopen-closed-item","lastRun":1425182634919},"find-and-replace:show":{"count":10,"name":"find-and-replace:show","lastRun":1425278767094},"find-and-replace:show-previous":{"count":2,"name":"find-and-replace:show-previous","lastRun":1425182639676},"window:close":{"count":1,"name":"window:close","lastRun":1425182644730},"core:delete":{"count":16,"name":"core:delete","lastRun":1425276103549},"core:undo":{"count":10,"name":"core:undo","lastRun":1425274096786},"pane:show-previous-item":{"count":2,"name":"pane:show-previous-item","lastRun":1425271751845},"pane:show-next-item":{"count":2,"name":"pane:show-next-item","lastRun":1425271752610},"core:copy":{"count":24,"name":"core:copy","lastRun":1425272487858},"editor:move-to-first-character-of-line":{"count":10,"name":"editor:move-to-first-character-of-line","lastRun":1425278757587},"tree-view:remove":{"count":1,"name":"tree-view:remove","lastRun":1425272510361},"fuzzy-finder:toggle-file-finder":{"count":4,"name":"fuzzy-finder:toggle-file-finder","lastRun":1425276877581},"core:select-up":{"count":2,"name":"core:select-up","lastRun":1425274612042},"core:cut":{"count":4,"name":"core:cut","lastRun":1425278310026},"editor:indent-selected-rows":{"count":2,"name":"editor:indent-selected-rows","lastRun":1425274621276},"editor:outdent-selected-rows":{"count":4,"name":"editor:outdent-selected-rows","lastRun":1425274621917},"editor:consolidate-selections":{"count":1,"name":"editor:consolidate-selections","lastRun":1425276878441},"core:cancel":{"count":2,"name":"core:cancel","lastRun":1425276878452},"core:select-all":{"count":2,"name":"core:select-all","lastRun":1425276882896},"core:select-down":{"count":6,"name":"core:select-down","lastRun":1425278314932},"editor:move-to-end-of-screen-line":{"count":4,"name":"editor:move-to-end-of-screen-line","lastRun":1425279135432}}},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["vision","bower","vendor","watch"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/lonnen/repos/firehug/package.json":1425485797523,"/Users/lonnen/repos/firehug/lib/remoteConfig.js":1425279679667},"keybinding-resolver":{},"metrics":{"sessionLength":355806129},"tree-view":{"directoryExpansionStates":{"lib":{},"public":{}},"selectedPath":"/Users/lonnen/repos/firehug/package.json","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}