{"mode":"editor","version":1,"windowDimensions":{"x":958,"y":22,"width":958,"height":1178,"maximized":false},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"paths":["/Users/lonnen/repos/leeroy-heroku"],"buffers":[{"text":"Flask==0.9\nrequests==2.5.1\nflake8==1.4\nnewrelic\n\n","markers":{"markers":{"1":{"id":1,"range":[[5,0],[5,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":64,"goalBufferRange":null,"preserveFolds":true,"autoscroll":true},"deserializer":"Marker"},"6":{"id":6,"range":[[4,0],[4,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[1,10],[1,16]]},"newParams":{"tailed":false,"range":[[1,16],[1,16]]},"deserializer":"MarkerPatch"},{"oldRange":[[1,10],[1,16]],"newRange":[[1,10],[1,15]],"oldText":"0.14.0","newText":"2.5.1","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[4,0],[4,0]],"newRange":[[4,0],[5,0]],"oldText":"","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[5,0]],"oldText":"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[5,12]],"oldText":"","newText":"KcAr1GqJ6KwQ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[5,0]],"oldText":"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[5,0],[5,12]],"newRange":[[5,0],[5,0]],"oldText":"KcAr1GqJ6KwQ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/lonnen/repos/leeroy-heroku/requirements.txt","modifiedWhenLastPersisted":true,"digestWhenLastPersisted":"e486345ae4d469803eff32c9f447b0e13239a856","deserializer":"TextBuffer"},{"text":"# Leeroy: Jenkins integration with GitHub pull requests\n\nLeeroy is a Python [Flask](http://flask.pocoo.org) service which\nintegrates Jenkins with GitHub pull requests.  Leeroy uses [GitHub\nhooks](http://developer.github.com/v3/repos/hooks/) to listen for pull\nrequest notifications and starts jobs on your Jenkins server.  Using the\nJenkins [notification plugin][jnp], Leeroy updates the pull request using\nGitHub's [status API](http://developer.github.com/v3/repos/statuses/)\nwith pending, success, failure, or error statuses.\n\n## Installation\n\nInstall the package using pip:\n\n    $ pip install leeroy\n\n## Configuration\n\nLeeroy needs to be configured to point to your GitHub repositories,\nto your Jenkins server and its jobs.  Leeroy will attempt to automatically\ninstall the GitHub hook for you.  You will also need to configure your\nJenkins jobs to pull the right repositories and commits.\n\n### Leeroy Configuration\n\nYou may either edit the `leeroy/settings.py` file or create a new file and\nset the `LEEROY_CONFIG` environment variable to point to that file.  It\nshould look something like:\n\n```python\n\nDEBUG = True\nLOGGING_CONF = \"logging.conf\"\nLOGGER_NAME = \"leeroy\"\n\n# The hostname (and :port, if necessary) of this server, used for\n# the GitHub hook\nSERVER_NAME = \"leeroy.example.com\"\n\n# GitHub configuration\nGITHUB_USER = \"octocat\"\nGITHUB_PASSWORD = \"\"\n\n# Jenkins configuration\nJENKINS_URL = \"https://jenkins.example.com\"\nJENKINS_USER = \"hudson\"\nJENKINS_PASSWORD = \"\"\n\n# Whether a Jenkins job is created for each commit in a pull request,\n# or only one for the last one.\nBUILD_ALL_COMMITS = True\n\n# A list of dicts containing configuration for each GitHub repository &\n# Jenkins job pair you want to join together.\n#\n# An example entry:\n#\n# {\"github_repo\": \"litl/leeroy\",\n#  \"jenkins_job_name\": \"leeroy-github\",\n#  \"github_user\": \"litl\",\n#  \"github_password\": \"password\",\n#  \"jenkins_url\": \"\"https://jenkins2.example.com\"\",\n#  \"jenkins_user\": \"litl\",\n#  \"jenkins_password\": \"password\",\n#  \"build_all_commits\": False}\n#\n# github_api_base, github_token, github_user, github_password, jenkins_url,\n# jenkins_user, jenkins_password, and build_all_commits are optional.  If not\n# present, they'll pull from the toplevel configuration options (GITHUB_USER,\n# etc.)\n\nREPOSITORIES = [\n    {\"github_repo\": \"litl/leeroy\",\n     \"jenkins_job_name\": \"leeroy-github\"}\n]\n```\n\n### Jenkins Configuration\n\n1. Install the Jenkins [git plugin][jgp] and [notification plugin][jnp].\n\n2. Create a Jenkins job.  Under \"Job Notifications\", set a Notification\nEndpoint with protocol HTTP and the URL pointing to `/notification/jenkins`\non your Leeroy server.  If your Leeroy server is `leeroy.example.com`, set\nthis to `http://leeroy.example.com/notification/jenkins`.\n\n3. Check the \"This build is parameterized\" checkbox, and add 4 string\nparameters: `GIT_BASE_REPO`, `GIT_HEAD_REPO`, `GIT_SHA1`, and `GITHUB_URL`.\nDefault values like `username/repo` for `GIT_BASE_REPO` and `GIT_HEAD_REPO`,\nand `master` for `GIT_SHA1` are a good idea, but not required.\n\n4. Under \"Source Code Management\", select Git.  Set the \"Repository URL\" to\n`git@github.com:$GIT_HEAD_REPO.git`.  Set \"Branch Specifier\" to `$GIT_SHA1`.\n\n5. Configure the rest of the job however you would otherwise.\n\n[jgp]: https://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin\n[jnp]: https://wiki.jenkins-ci.org/display/JENKINS/Notification+Plugin\n\n## Running Leeroy\n\nAfter configuring your service, you can start Leeroy:\n\n    $ leeroy\n\nEnsure that the GitHub hook has been installed by visiting\n`https://github.com/<user>/<repo>/admin/hooks` for your project, or by\nchecking the Leeroy logs.\n\nSubmit a pull request for one of your watched GitHub repositories.  You\nshould shortly see a build scheduled for its corresponding Jenkins job.\nSoon after that, you should see a \"pending\" status on the pull request\nin GitHub.  Once the build finishes, you should see either a \"success\"\nor \"failure\" status on your pull request.  Congratulations!\n\nIf you want to run Leeroy in a more production-ready environment then any\nWSGI app server should work.  We are fans of\n[uwsgi](http://projects.unbit.it/uwsgi/).\n\n## Contribution\n\nContributions are welcome!  Here's the best way to do that:\n\n1. Fork the repo\n2. Make your changes, preferably in a feature branch on your repo.  Don't\nforget to update the AUTHORS.md file!\n3. Submit a pull request\n\nPlease make sure that `python setup.py test` does not return any PEP-8 or\npyflakes errors before submitting your pull request.\n\n## FAQ\n\n### Why is this a server instead of a Jenkins plugin?\n\nThe honest answer is that I spend most of my day developing a Flask\napplication in Python, and that's the environment I have set up, feel\nvery comfortable in, and where I knew I could get something up and\nrunning quickly.\n\nThe delusional answer is that this makes it possible to integrate\nother CI services fairly easily in the future.\n\n### What's with the name Leeroy?\n\n[Know your meme.](http://knowyourmeme.com/memes/leeroy-jenkins)\n\n## Copyright and License\n\nLeeroy is Copyright (c) 2012 litl, LLC and licensed under the MIT license.\nSee the LICENSE file for full details.\n","markers":{"markers":{"1":{"id":1,"range":[[7,55],[7,55]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":68,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/lonnen/repos/leeroy-heroku/readme.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"454c43bd7f4233d2474fec224a855a8ec0493052","deserializer":"TextBuffer"},{"text":"DEBUG = True\nLOGGING_CONF = \"logging.conf\"\nLOGGER_NAME = \"leeroy\"\n\n# The hostname (and :port, if necessary) of this server, used for\n# the GitHub hook\nSERVER_NAME = \"leeroybot.herokuapp.com\"\n\n# GitHub configuration\nGITHUB_USER = \"LeeroyBot\"\nGITHUB_PASSWORD = \"l33r0ybot\"\n\n# Jenkins configuration\nJENKINS_URL = \"https://ci.mozilla.org\"\nJENKINS_USER = \"bots\"\nJENKINS_PASSWORD = \"knlFDxq9A0Q2Agv\"\n\n# Whether a Jenkins job is created for each commit in a pull request,\n# or only one for the last one.\nBUILD_ALL_COMMITS = False\n\n# A list of dicts containing configuration for each GitHub repository &\n# Jenkins job pair you want to join together.\n#\n# An example entry:\n#\n# {\"github_repo\": \"litl/leeroy\",\n#  \"jenkins_job_name\": \"leeroy-github\",\n#  \"github_user\": \"litl\",\n#  \"github_password\": \"password\",\n#  \"jenkins_user\": \"litl\",\n#  \"jenkins_password\": \"password\",\n#  \"build_all_commits\": False}\n#\n# github_user, github_password, jenkins_user, jenkins_password, and\n# build_all_commits are optional.  If not present, they'll pull from\n# the toplevel configuration options (GITHUB_USER, etc.)\nREPOSITORIES = [\n    {\n        \"github_repo\": \"mozilla/affiliates\",\n        \"jenkins_job_name\": \"affiliates_github\",\n        \"token\": \"build-teh-master-inputz!\"\n    },\n    {\n        \"github_repo\": \"mozilla/bedrock\",\n        \"jenkins_job_name\": \"bedrock_github\",\n        \"token\": \"build-teh-master-inputz!\"\n    },\n    {\n        \"github_repo\": \"mozilla/mozillians\",\n        \"jenkins_job_name\": \"mozillians_github\",\n        \"token\": \"XYKq7jLEHaFheiIO\"\n    },\n    {\n        \"github_repo\": \"mozilla/balrog\",\n        \"jenkins_job_name\": \"balrog_github\",\n        \"token\": \"H7mGta5b0d1LjKOo\"\n    },\n    {\n        \"github_repo\": \"mozilla/dxr\",\n        \"jenkins_job_name\": \"dxr-github\",\n        \"token\": \"jIXrSVHTk8iDPhJb\"\n    },\n    {\n        \"github_repo\": \"mozilla/remo\",\n        \"jenkins_job_name\": \"remo_github\",\n        \"token\": \"CEZSgpsNJetlX64R\"\n    },\n    {\n        \"github_repo\": \"mozilla/fjord\",\n        \"jenkins_job_name\": \"fjord_github\",\n        \"token\": \"een0eiqu4aiBah5w\"\n    },\n    {\n        \"github_repo\": \"mozilla/snippets-service\",\n        \"jenkins_job_name\": \"snippets_service_github\",\n        \"token\": \"lwMfnxKTvNYp05Rg\"\n    },\n    {\n        \"github_repo\": \"mozilla/webpay\",\n        \"jenkins_job_name\": \"marketplace_webpay_github\",\n        \"jenkins_url\": \"https://ci-addons.allizom.org/\",\n        \"token\": \"sFVZ7cxWLtaqGJ3B\",\n        \"jenkins_user\": \"\",\n        \"jenkins_password\": \"\"\n    },\n    {\n        \"github_repo\": \"mozilla/solitude\",\n        \"jenkins_job_name\": \"solitude_github\",\n        \"jenkins_url\": \"https://ci-addons.allizom.org/\",\n        \"token\": \"KrGfHDnj5bsj\",\n        \"jenkins_user\": \"\",\n        \"jenkins_password\": \"\"\n    }\n]\n","markers":{"markers":{"1":{"id":1,"range":[[11,0],[11,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":78,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/lonnen/repos/leeroy-heroku/settings_override.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"be1cdca3a37514556b7a9803b2cd7df63f714d13","deserializer":"TextBuffer"},{"text":"# Copyright 2012 litl, LLC.  Licensed under the MIT license.\n\nimport logging\nimport requests\n\nbuild_path = \"/job/{job_name}/buildWithParameters\" \\\n    \"?GIT_BASE_REPO={git_base_repo}\" \\\n    \"&GIT_HEAD_REPO={git_head_repo}\" \\\n    \"&GIT_SHA1={git_sha1}\" \\\n    \"&GITHUB_URL={github_url}\" \\\n    \"&CAUSE=Leeroy+Build\"\n\n\ndef get_jenkins_auth(app, repo_config):\n    user = repo_config.get(\"jenkins_user\",\n                           app.config[\"JENKINS_USER\"])\n    password = repo_config.get(\"jenkins_password\",\n                               app.config[\"JENKINS_PASSWORD\"])\n\n    return user, password\n\n\ndef get_jenkins_url(app, repo_config):\n    return repo_config.get(\"jenkins_url\", app.config[\"JENKINS_URL\"])\n\n\ndef schedule_build(app, repo_config, head_repo_name, sha, html_url):\n    base_repo_name = repo_config[\"github_repo\"]\n    job_name = repo_config[\"jenkins_job_name\"]\n    token = repo_config.get(\"token\", \"\")\n\n    url = get_jenkins_url(app, repo_config) + \\\n        build_path.format(job_name=job_name,\n                          git_base_repo=base_repo_name,\n                          git_head_repo=head_repo_name,\n                          git_sha1=sha,\n                          github_url=html_url)\n\n    if token:\n        url += \"&TOKEN={token}\".format(token=token)\n\n    user, password = get_jenkins_auth(app, repo_config)\n    if user:\n        build = requests.post(url, auth=(user, password))\n    else:\n        build = requests.post(url)\n    logging.debug(\"scheduling %s: %s\", url, build.status_code)\n    return build.status_code\n","markers":{"markers":{"1":{"id":1,"range":[[18,0],[18,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":82,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/lonnen/repos/leeroy-heroku/leeroy/jenkins.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"e68ec1b60e38a81429b9dcac80e15b83be3823dd","deserializer":"TextBuffer"},{"text":"# Copyright 2012 litl, LLC.  Licensed under the MIT license.\n\nimport logging\nimport logging.config\nimport os\n\nfrom flask import Flask\n\nfrom .base import base\n\n\napp = Flask(\"leeroy\")\n\napp.config.from_object(\"leeroy.settings\")\n\nlogging.info('Loading leeroy...')\nif \"LEEROY_CONFIG\" in os.environ:\n    logging.info('Configfile: %s', os.environ[\"LEEROY_CONFIG\"])\n    app.config.from_envvar(\"LEEROY_CONFIG\")\n\nlogging_conf = app.config.get(\"LOGGING_CONF\")\nif logging_conf and os.path.exists(logging_conf):\n    logging.config.fileConfig(logging_conf)\n\nlogger_name = app.config.get(\"LOGGER_NAME\")\nif logger_name:\n    logging.root.name = logger_name\n\napp.register_blueprint(base)\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":94},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/lonnen/repos/leeroy-heroku/leeroy/app.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"e73719cca03bf7418f868f920533725eb98bc280","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":64,"softTabs":true,"displayBuffer":{"id":65,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lonnen/repos/leeroy-heroku/requirements.txt","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":68,"softTabs":true,"displayBuffer":{"id":69,"softWrapped":true,"editorWidthInChars":null,"scrollTop":524,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lonnen/repos/leeroy-heroku/readme.md","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":78,"softTabs":true,"displayBuffer":{"id":79,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lonnen/repos/leeroy-heroku/settings_override.py","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":82,"softTabs":true,"displayBuffer":{"id":83,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lonnen/repos/leeroy-heroku/leeroy/jenkins.py","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":94,"softTabs":true,"displayBuffer":{"id":95,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lonnen/repos/leeroy-heroku/leeroy/app.py","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemUri":"/Users/lonnen/repos/leeroy-heroku/requirements.txt","focused":false,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-text","language-gfm","language-python","language-hyperlink","language-todo"],"deserializer":"Workspace"},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"packageStates":{"command-logger":{"eventLog":{"find-and-replace:show":{"count":8,"name":"find-and-replace:show","lastRun":1419918159606},"core:confirm":{"count":8,"name":"core:confirm","lastRun":1419918161018},"core:backspace":{"count":18,"name":"core:backspace","lastRun":1420221261199},"core:save":{"count":9,"name":"core:save","lastRun":1419921433804},"find-and-replace:show-previous":{"count":1,"name":"find-and-replace:show-previous","lastRun":1412880643187},"core:copy":{"count":3,"name":"core:copy","lastRun":1419920436238},"tree-view:remove":{"count":1,"name":"tree-view:remove","lastRun":1412880896107},"core:close":{"count":14,"name":"core:close","lastRun":1419920281497},"project-find:show":{"count":3,"name":"project-find:show","lastRun":1412881968298},"core:move-right":{"count":1,"name":"core:move-right","lastRun":1412881951024},"core:undo":{"count":3,"name":"core:undo","lastRun":1412881963563},"pane:show-next-item":{"count":3,"name":"pane:show-next-item","lastRun":1419920312000},"tree-view:collapse-directory":{"count":2,"name":"tree-view:collapse-directory","lastRun":1419918128671},"tree-view:expand-directory":{"count":1,"name":"tree-view:expand-directory","lastRun":1419918127858},"pane:show-previous-item":{"count":3,"name":"pane:show-previous-item","lastRun":1419920310286},"core:paste":{"count":3,"name":"core:paste","lastRun":1420221037638},"core:move-left":{"count":1,"name":"core:move-left","lastRun":1419918169310},"core:cut":{"count":1,"name":"core:cut","lastRun":1419918187008},"core:delete":{"count":1,"name":"core:delete","lastRun":1419918187700},"core:move-up":{"count":7,"name":"core:move-up","lastRun":1419920329168},"editor:newline":{"count":1,"name":"editor:newline","lastRun":1420221037498}}},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["environment","register_we","register_","register_g","settings"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/lonnen/repos/leeroy-heroku/requirements.txt":1419921429256,"/Users/lonnen/repos/leeroy-heroku/readme.md":1419920243550,"/Users/lonnen/repos/leeroy-heroku/settings_override.py":1419920425912,"/Users/lonnen/repos/leeroy-heroku/leeroy/jenkins.py":1419920311977,"/Users/lonnen/repos/leeroy-heroku/leeroy/app.py":1419920379185},"keybinding-resolver":{},"metrics":{"sessionLength":517874904},"tree-view":{"directoryExpansionStates":{"leeroy":{}},"selectedPath":"/Users/lonnen/repos/leeroy-heroku/requirements.txt","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}