{"mode":"editor","version":1,"windowDimensions":{"x":958,"y":22,"width":958,"height":1178},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/lonnen/repos/mozfest","buffers":[{"text":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1\">\n    <title>What's Going on at MozFest</title>\n    <style>\n      * {\n        -moz-box-sizing: border-box;\n        box-sizing: border-box;\n      }\n      body {\n        font-family: sans-serif;\n        margin: 0;\n      }\n      h1 {\n        padding: 0 1rem;\n        color: #db000d;\n      }\n      h2 {\n        padding: 1rem;\n        border: 1px solid #080;\n        background: #efe;\n        margin: 0;\n      }\n      h3 {\n        margin: 0;\n        cursor: pointer;\n        padding: 1rem;\n        background: #eef;\n        border: 1px solid #00c;\n      }\n      h4 {\n        margin: 0;\n        padding: .4rem 1rem;\n        background: #eef;\n        border: 1px solid #00c;\n      }\n      .inprogress,\n      .inprogress h3 {\n        background: #eec;\n      }\n      .details {\n        padding: 1rem;\n        display: none;\n      }\n      .details div {\n        margin: 1rem 0;\n      }\n      .title.open + .details {\n        display: block;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Mozilla Festival NOW!</h1>\n    <div id=\"container\"><h2>Loading&hellip;</h2></div>\n    <script>\n\n      var today = 5;\n\n      function makeEl(s, text, attr) {\n        var a = s.split('.');\n        var tag = a.shift();\n        var el = document.createElement(tag);\n        el.className = a.join(' ');\n        if (text) el.textContent = text;\n        if (attr) {\n            for (var k in attr) {\n                el.setAttribute(k, attr[k]);\n            }\n        }\n        return el;\n      }\n\n      var xhr = new XMLHttpRequest();\n      function reqListener () {\n        window.schedule = JSON.parse(this.response).schedule;\n        drawSchedule();\n      };\n\n      var oReq = new XMLHttpRequest();\n      oReq.onload = reqListener;\n      oReq.open(\"get\", \"/schedule.json\", true);\n      oReq.send();\n\n      var el = document.querySelector('#container');\n\n      document.body.addEventListener('click', function (e) {\n        if (e.target.classList.contains('title')) {\n          e.target.classList.toggle('open');\n        }\n      });\n\n      function drawSchedule() {\n        el.innerHTML = '';\n        var evs = getEventsByFloor();\n        window.floors = evs;\n        var now = new Date();\n        now.setHours(18);\n        var nowTime = now.getHours() * 100 + now.getMinutes();\n        for (var i=9; i>=0; i--) {\n          var floor = evs[i];\n          floor.sort(function(a, b) {\n            return b.time - a.time;\n          });\n          if (floor.length) {\n            if (floor[0].time > nowTime) {\n              el.appendChild(makeEl('h2', i ? 'Floor ' + i : 'General'));\n              el.appendChild(makeEl('h4.soon', 'starting soon'));\n            }\n          }\n          var inProgress = false;\n          floor.forEach(function(session) {\n            if (session.time - nowTime < 100 && session.timeEnd > nowTime) {\n              var classes = '.session';\n              if (session.time < nowTime) {\n                classes += '.inprogress';\n                if (!inProgress) {\n                  el.appendChild(makeEl('h4.inprogress', 'in progress'));\n                  inProgress = true;\n                }\n              }\n              var sEl = makeEl('div' + classes);\n\n              sEl.appendChild(makeEl('h3.title', session.startTime + ' - ' + session.name));\n              var details = makeEl('div.details');\n              if (session.format) {\n                details.appendChild(makeEl('div', session.id + ' - ' + session.format));\n              } else {\n                details.appendChild(makeEl('div', session.id));\n              }\n              details.appendChild(makeEl('div', [session.startTime,session.endTime||''].join('-')));\n              if (session.location) {\n                details.appendChild(makeEl('div.location', 'Room ' + session.location));\n              }\n              if (session.description) {\n                details.innerHTML += session.description;\n              }\n              sEl.appendChild(details);\n\n              el.appendChild(sEl);\n            }\n          });\n        }\n      }\n\n      var floorDict = {\n        'games': 9,\n        'badges': 7,\n        'privacy': 2,\n        'teachtheweb': 6,\n        'connect': 6,\n        'science': 2,\n        'mobile': 1,\n        'data': 8,\n        'journalism': 8,\n        'teachtheweb_scrum': 6,\n        'plenary': 0,\n        'all': 0,\n        'physical': 1\n      };\n\n      function getEventsByFloor() {\n        var floors = [];\n        for (var i=0; i<10; i++) {\n          floors.push([]);\n        }\n        var tracks = ['all','badges','connect','data','games','journalism','mobile','physical','privacy','science','teachtheweb','teachtheweb_scrum'];\n        var iter = tracks.map(function (t) {\n          return t + '-' + today;\n        });\n        iter.forEach(function (slug) {\n          var track = schedule[slug];\n          for (s in track) {\n            var session = track[s];\n            var floor = floorDict[session.id] || 0;\n            track[s].time = parseInt(session.startTime.replace(':',''),10);\n            track[s].timeEnd = session.endTime ? parseInt(session.endTime.replace(':',''),10) : session.time + 100;\n            floors[floor].push(session);\n          }\n        });\n        return floors;\n      }\n\n    </script>\n  </body>\n</html>\n","markers":{"markers":{"1":{"id":1,"range":[[15,10],[15,10]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":14,"autoscroll":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[83,24],[83,69]]},"newParams":{"tailed":false,"range":[[83,69],[83,69]]},"deserializer":"MarkerPatch"},{"oldRange":[[83,24],[83,69]],"newRange":[[83,24],[83,25]],"oldText":"http://mozfest-data.paas.allizom.org/schedule","newText":"/","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,25],[83,25]],"newRange":[[83,25],[83,26]],"oldText":"","newText":"s","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,26],[83,26]],"newRange":[[83,26],[83,27]],"oldText":"","newText":"c","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,27],[83,27]],"newRange":[[83,27],[83,28]],"oldText":"","newText":"h","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,28],[83,28]],"newRange":[[83,28],[83,29]],"oldText":"","newText":"e","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,29],[83,29]],"newRange":[[83,29],[83,30]],"oldText":"","newText":"d","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,30],[83,30]],"newRange":[[83,30],[83,31]],"oldText":"","newText":"u","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,31],[83,31]],"newRange":[[83,31],[83,32]],"oldText":"","newText":"l","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,32],[83,32]],"newRange":[[83,32],[83,33]],"oldText":"","newText":"e","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,33],[83,33]],"newRange":[[83,33],[83,34]],"oldText":"","newText":".","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,34],[83,34]],"newRange":[[83,34],[83,35]],"oldText":"","newText":"j","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,35],[83,35]],"newRange":[[83,35],[83,36]],"oldText":"","newText":"s","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,36],[83,36]],"newRange":[[83,36],[83,37]],"oldText":"","newText":"o","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[83,37],[83,37]],"newRange":[[83,37],[83,38]],"oldText":"","newText":"n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lonnen/repos/mozfest/now/index.html","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"12e910a124e9fba81c8c796a5f4d6a807fea0016","deserializer":"TextBuffer"},{"text":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1\">\n    <title>Schedule</title>\n    <style>\n      * {\n        -moz-box-sizing: border-box;\n        box-sizing: border-box;\n      }\n      body {\n        font-family: sans-serif;\n      }\n      #container {\n        margin: 1em;\n      }\n      b {\n        font: bold 13px sans-serif;\n        margin-bottom: 1em;\n        display: block;\n      }\n      .track {\n        display: inline-block;\n        width: 256px;\n        vertical-align: top;\n        position: relative;\n        white-space: normal;\n        border: 1px solid black;\n        height: 1700px;\n        background: #fec;\n        overflow: hidden;\n      }\n      .session {\n        border: 1px solid black;\n        background: rgba(255,255,255,.8);\n        position: absolute;\n        width: 200px;\n        padding: 1em;\n        left: 8px;\n      }\n      .session div {\n        margin: .5em 0;\n        font-size: .8em;\n      }\n      .session:hover, .session.tapped {\n        z-index: 999 !important;\n        background: #eef;\n      }\n      .day {\n        white-space:nowrap;\n        height: 1800px;\n      }\n      h2 {\n        font-size: 3em;\n      }\n      .day h3 {\n        text-align: center;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>MozFest \"Everything At Once\" Schedule (<a href=\"http://schedule.mozillafestival.org/#!/schedule\">original</a>)</h1>\n    <p>Hover/tap events to bring them to the foreground</p>\n    <div id=\"container\">Loading&hellip;</div>\n    <script>\n\n      document.body.addEventListener('touchstart', highlight);\n\n      function highlight(e) {\n        if (e.target.classList.contains('session')) {\n          var tapped = document.querySelectorAll('.tapped');\n          for (var i=0;i<tapped.length;i++) {\n            tapped[i].classList.remove('tapped');\n          }\n          e.target.classList.add('tapped');\n        }\n      }\n\n\n      function makeEl(s, text, attr) {\n        var a = s.split('.');\n        var tag = a.shift();\n        var el = document.createElement(tag);\n        el.className = a.join(' ');\n        if (text) el.textContent = text;\n        if (attr) {\n            for (var k in attr) {\n                el.setAttribute(k, attr[k]);\n            }\n        }\n        return el;\n      }\n\n      var xhr = new XMLHttpRequest();\n      function reqListener () {\n        window.schedule = JSON.parse(this.response).schedule;\n        drawSchedule();\n      };\n\n      var oReq = new XMLHttpRequest();\n      oReq.onload = reqListener;\n      oReq.open(\"get\", \"/schedule.json\", true);\n      oReq.send();\n\n      function drawSchedule() {\n        var el = document.querySelector('#container');\n        el.innerHTML = '';\n        var tracks = ['all','badges','connect','data','games','journalism','mobile','physical','privacy','science','teachtheweb','teachtheweb_scrum'];\n\n        var days = {'5': 'Saturday', '6': 'Sunday'};\n\n        for (var day in days) {\n          var dayName = days[day];\n          var h2 = makeEl('h2', dayName);\n          var dayEl = makeEl('div.day');\n          tracks.forEach(function (t) {\n            var track = makeEl('div.track');\n            track.appendChild(makeEl('h3', t));\n            var sessionList = schedule[t+'-'+day];\n            var seen = [];\n            var sessions = [];\n            for (var s in sessionList) {\n              sessions.push(sessionList[s]);\n            }\n            sessions.sort(function(a,b) {\n              return a.startTime > b.startTime ? 1 : -1;\n            });\n            sessions.forEach(function (sess) {\n              var sEl = makeEl('div.session');\n              sEl.appendChild(makeEl('b', sess.name));\n              var start = timeToMins(sess.startTime);\n              var end = sess.endTime ? timeToMins(sess.endTime) : start + 120;\n              var c = collides(seen, start, end);\n              if (c) {\n                sEl.style.left = (c * 20 % 70) + 20 + 'px';\n                sEl.style.width = '160px';\n                sEl.style.zIndex = c;\n              }\n              seen.push([start,end]);\n              sEl.style.top = start * 2 + 'px';\n              sEl.style.minHeight = (end - start) * 2 + 'px';\n              sEl.appendChild(makeEl('div', [sess.startTime,sess.endTime||''].join('-')))\n              sEl.appendChild(makeEl('div', sess.location));\n              track.appendChild(sEl);\n            });\n            dayEl.appendChild(track);\n          });\n          el.appendChild(h2);\n          el.appendChild(dayEl);\n        }\n      }\n\n      function collides(seen, start, end) {\n        var num = 0;\n        for (var i=0; i<seen.length; i++) {\n          var start2 = seen[i][0];\n          var end2 = seen[i][1];\n          if ((start <= start2 && end >= start2) ||\n              (start <= end2 && end >= end2) ||\n              (start2 <= start && end2 >= start) ||\n              (start2 <= end && end2 >= end)) {\n            num++;\n          }\n        }\n        return num;\n      }\n\n      function timeToMins(time) {\n        var parts = time.split(':');\n        return (parseInt(parts[0],10) - 7) * 60 + parseInt(parts[1],10);\n      }\n    </script>\n  </body>\n</html>\n","markers":{"markers":{"1":{"id":1,"range":[[102,38],[102,38]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":26,"goalBufferRange":null,"autoscroll":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[102,24],[102,61]],"newRange":[[102,24],[102,24]],"oldText":"http://mozfest-data.paas.allizom.org/","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[102,24],[102,24]],"newRange":[[102,24],[102,25]],"oldText":"","newText":"/","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[102,33],[102,33]],"newRange":[[102,33],[102,34]],"oldText":"","newText":".","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[102,34],[102,34]],"newRange":[[102,34],[102,35]],"oldText":"","newText":"j","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[102,35],[102,35]],"newRange":[[102,35],[102,36]],"oldText":"","newText":"s","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[102,36],[102,36]],"newRange":[[102,36],[102,37]],"oldText":"","newText":"o","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[102,37],[102,37]],"newRange":[[102,37],[102,38]],"oldText":"","newText":"n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[174,7],[174,7]],"newRange":[[174,7],[175,0]],"oldText":"","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":true},"newParams":{"reversed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lonnen/repos/mozfest/index.html","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"4c063f65c1c52f5a3c12aaeeec23a1aea4c699b1","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":14,"softTabs":true,"displayBuffer":{"id":15,"softWrap":true,"editorWidthInChars":88,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lonnen/repos/mozfest/now/index.html","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":26,"softTabs":true,"displayBuffer":{"id":27,"softWrap":true,"editorWidthInChars":88,"scrollTop":1180,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lonnen/repos/mozfest/index.html","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/lonnen/repos/mozfest/index.html","focused":true,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"command-logger":{"eventLog":{"find-and-replace:show":{"count":5,"name":"find-and-replace:show","lastRun":1402168788543},"core:confirm":{"count":6,"name":"core:confirm","lastRun":1402168788778},"core:save":{"count":2,"name":"core:save","lastRun":1402168798275},"core:backspace":{"count":1,"name":"core:backspace","lastRun":1402168792565},"core:move-right":{"count":11,"name":"core:move-right","lastRun":1402168796034},"core:move-left":{"count":3,"name":"core:move-left","lastRun":1402168793994},"editor:newline":{"count":1,"name":"editor:newline","lastRun":1402168797302},"core:undo":{"count":1,"name":"core:undo","lastRun":1402168797973}}},"find-and-replace":{"viewState":{"findHistory":["json","data","paas"],"replaceHistory":[],"modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false}}},"fuzzy-finder":{"/Users/lonnen/repos/mozfest/now/index.html":1402168739089,"/Users/lonnen/repos/mozfest/index.html":1402168787622},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":254875779},"tree-view":{"directoryExpansionStates":{"now":{}},"selectedPath":"/Users/lonnen/repos/mozfest/index.html","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}