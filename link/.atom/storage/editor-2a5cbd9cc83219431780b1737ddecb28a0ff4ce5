{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":958,"height":1178},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/lonnen/repos/2014-08-14-stanford/stanford/code review","buffers":[{"text":"import os\nimport sys\n\nimport numpy as np\nfrom matplotlib import pyplot\n\ndef read_csv_file(input_csv_file):\n    '''\n    This code will read in a csv file of year, temperature, rainfall,\n    and number of mosquitos and return 4 arrays, one for each column\n    '''\n    return np.genfromtxt(input_csv_file, unpack=True,skiprows=1,delimiter=\",\")\n    years, temperature, rainfall, mosquitos = d\n    return d\n\ndef process(dataset):\n    '''\n    process the data file and output the necessary analytics\n\n    we want standard deviation and variance for each column\n    '''\n    data = []\n    for arr_arr in dataset:\n      std_arr_arr = np.sqrt(np.mean(abs(arr_arr - np.mean(arr_arr)) * 2));\n      var_arr_arr = (np.mean(abs(arr_arr - np.mean(arr_arr)) ** 2));\n      max_arr_arr = max(arr_arr);\n      min_arr_arr = min(arr_arr);\n      print max_arr_arr, min_arr_arr;\n      data.append([std_arr_arr, var_arr_arr]);\n    return data\n\ndef write_file(ofile, data):\n    ofile = open(ofile, 'w')\n    for row in data:\n        ofile.write(np.array_str(np.array(row)))\n    ofile.close()\n\n# sys.argv contains all the parameters passed\n# to the program. assume the 1st is a filename\n# this way we can use the same file for many datasets!\ninput_file = sys.argv[1]\nofile = \"processed-\" + input_file\nif not input_file:\n    print \"need a file to process!\"\n    exit(1)\np = read_csv_file(input_file)\npr = process(p)\nwrite_file(ofile, pr)\n","markers":{"markers":{"1":{"id":1,"range":[[14,0],[14,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":12,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/lonnen/repos/2014-08-14-stanford/stanford/code review/data_processor.py","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"4b056cba1bd66c1d00fa098b5ee58d21bf4bf368","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":12,"softTabs":true,"displayBuffer":{"id":13,"softWrap":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/lonnen/repos/2014-08-14-stanford/stanford/code review/data_processor.py","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/lonnen/repos/2014-08-14-stanford/stanford/code review/data_processor.py","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-python"],"deserializer":"Workspace"},"packageStates":{"command-logger":{"eventLog":{"window:increase-font-size":{"count":8,"name":"window:increase-font-size","lastRun":1408139987750}}},"fuzzy-finder":{"/Users/lonnen/repos/2014-08-14-stanford/stanford/code review/data_processor.py":1408139916040},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":20928626},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/lonnen/repos/2014-08-14-stanford/stanford/code review/data_processor.py","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}